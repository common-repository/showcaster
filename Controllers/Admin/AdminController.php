<?phpnamespace SHWPortfolioCatalog\Controllers\Admin;use SHWPortfolioCatalog\Core\Admin\Listener;use SHWPortfolioCatalog\Models\Catalog;use SHWPortfolioCatalog\Models\Category;use SHWPortfolioCatalog\Models\Themes;class AdminController{	use Listener;	public $pages;	public function __construct(){		add_action('admin_footer', array('SHWPortfolioCatalog\Controllers\Admin\ShortcodeController', 'showInlinePopup_'));		add_action('media_buttons_context', array('SHWPortfolioCatalog\Controllers\Admin\ShortcodeController', 'showEditorMediaButton_'));		add_action('admin_menu', array($this, 'adminMenu'), 1);		add_action('admin_init', array(__CLASS__, 'createCatalog'), 1);		add_action('admin_init', array(__CLASS__, 'createTheme'), 1);		add_action('admin_init', array(__CLASS__, 'createCategory'), 1);		add_action('admin_init', array(__CLASS__, 'removeCategory'), 1);	}	public function adminMenu(){		$this->pages['main_page'] = add_menu_page(__('Showcaster'), __('Showcaster'), 'manage_options', 'shwportfolio', array(			$this,			'mainPage'		), \SHWPortfolioCatalog()->pluginUrl() . '/resources/assets/images/icons/portfolio.png');		$this->pages['shwcatalog_list'] = add_submenu_page('shwportfolio', __('Grid Manager'), __('Grid Manager'), 'manage_options', 'shwportfolio', array(			$this,			'mainPage'		));        $this->pages['categories'] = add_submenu_page('shwportfolio', __('Categries'), __('Categries'), 'manage_options', 'shwcategories', array(			$this,			'shwcategories'		));		$this->pages['shwthemesPage'] = add_submenu_page('shwportfolio', __('Themes / Styles'), __('Themes / Styles' ), 'manage_options', 'shwportfoliocatalog_themes', array(			$this,			'shwthemesPage'		));	}	public function mainPage(){		$catalogList = new CatalogListController();	}	public function shwcategories(){		$categoryList = new CategoriesController();	}	public function  shwthemesPage(){		$themes = new ThemesController();	}	public static function createCategory(){		if (!self::isRequest('shwcategories', 'save_category', 'POST')) {			return;		}		$title=str_replace("\'","",$_POST['cat_title']);		$title=str_replace("-"," ",$title);		$title = sanitize_text_field($_POST['cat_title']);		$description = sanitize_text_field($_POST['cat_description']);		if(!empty($title) && !empty($description)) {			$category = new Category();			$category = $category->saveCategory($title, $description);		}	}	public static function removeCategory(){		if (!self::isRequest('shwcategories', 'remove_category', 'GET')) {			return;		}		if (!isset($_GET['id'])) {			wp_die(__('"id" parameter is required', SHWPORTFOLIOCATALOG_TEXT_DOMAIN));		}		$id = $_GET['id'];		$categories = new Category();		$categories = $categories->removeCategory($id);		$location = admin_url('admin.php?page=shwcategories');		header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');		header("Location: $location");		exit;	}	public static function createCatalog() {		if (!self::isRequest('shwportfolio', 'create_new_catalog', 'GET')){			return;		}		if (!isset($_GET['_wpnonce']) || !wp_verify_nonce($_GET['_wpnonce'], 'shwcatalog_create_new_catalog')){			\SHWPortfolioCatalog()->admin->printError(__('Security check failed.', SHWPORTFOLIOCATALOG_TEXT_DOMAIN));		}		$catalog = new Catalog();        $catalogsCount = \SHWPortfolioCatalog\Models\Catalog::get();		$catalogId = $catalog->setName('New Created Showcaster '.(count($catalogsCount) + 1))->save();		$catalog->updateCatalogData(array(			'productOptionsactivateLoadMore'=>'on',			'productOptionsEnableSearch' =>'on',			'productOptionTheme' => 1,			'productEnableCategoriesFilter' => "on",			'productEnableOrderingButtons' => "on",			'productPopup' => 'popup',			'productEnableZoom' => 'on',			'productEnableLightbox' => 'on',			'productShowCategories' => 'on',			'productShowAttributes' => 'on'		));		if ($catalogId && is_int($catalogId)){			$location = admin_url('admin.php?page=shwportfolio&task=edit_catalog&id=' . $catalogId);			$location = wp_nonce_url($location, 'shwportfolio_edit_catalog_' . $catalogId);			$location = html_entity_decode($location);			header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');			header("Location: $location");			exit;		} else {			wp_die(__('Problems occured while creating new product.', SHWPORTFOLIOCATALOG_TEXT_DOMAIN));		}	}	public static function createTheme(){		if (!self::isRequest('shwportfoliocatalog_themes', 'create_new_theme', 'GET')) {			return;		}		if (!isset($_GET['_wpnonce']) || !wp_verify_nonce($_GET['_wpnonce'], 'shwcatalog_create_new_theme')) {			\SHWPortfolioCatalog()->admin->printError(__('Security check failed.', SHWPORTFOLIOCATALOG_TEXT_DOMAIN));		}		$theme = new Themes();		$theme = $theme->setTitle('New Theme');		$theme = $theme->setOptions(null)->save();		if ($theme && is_int($theme)) {			$location = admin_url('admin.php?page=shwportfoliocatalog_themes&task=edit_theme&id=' . $theme);			$location = html_entity_decode($location);			header('Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0');			header("Location: $location");			exit;		} else {			wp_die(__('Problems occured while creating Showcaster.', SHWPORTFOLIOCATALOG_TEXT_DOMAIN));		}	}	public static  function getCategories($all){		$categories = new Category();		$categories = $categories->getCategories(true,false);		if(empty($categories)) {			return ;		}		return $categories;	}}